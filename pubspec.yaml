name: scan_qr_code
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

#linting script for running
scripts:
   all: "rm -rf build && flutter clean && flutter pub get && dart run build_runner build --delete-conflicting-outputs && cd ios && pod deintegrate && pod install && cd .."
   gen: "dart run build_runner build --delete-conflicting-outputs"
   get: "flutter pub get"
   setIcon: "flutter pub get && dart run flutter_launcher_icons"

environment:
  sdk: '>=3.1.4 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  shared_preferences: ^2.2.2
  drift: ^2.13.1
  injectable: ^2.3.2
  get_it: ^7.6.4
  flutter_bloc: ^8.1.3
  sqflite: ^2.3.0
  json_annotation: ^4.8.1
  path: ^1.8.3
  equatable: ^2.0.5
  dartz: ^0.10.1
  cached_network_image: ^3.3.0
  flutter_svg: ^2.0.9
  dev: ^1.0.0
  flutter_screenutil: ^5.9.0
  freezed_annotation: ^2.4.1
  mobile_scanner: ^3.5.2
  permission_handler: ^11.0.1
  flutter_native_splash: ^2.3.5
  go_router: ^12.1.1
  async: ^2.10.0
  infinite_scroll_pagination: ^4.0.0
  loader_overlay: ^3.0.0
  collection: ^1.17.2
  url_launcher: ^6.2.1
  uuid: ^4.2.1
  shimmer: ^3.0.0

dev_dependencies:
  injectable_generator:
  build_runner:
  json_serializable:
  flutter_gen_runner:
  flutter_launcher_icons: ^0.13.1
  freezed: ^2.4.5
  mockito: ^5.4.3
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/database/migration/
    - assets/icons/
    - assets/images/
    - assets/images/permission/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
flutter_gen:
    output: lib/app/gen/
    integrations:
      flutter_svg: true

# flutter pub get
# dart run flutter_launcher_icons
flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  remove_alpha_ios: true
  image_path: "assets/icons/ic_logo.jpg"
  min_sdk_android: 21
# dart run flutter_native_splash:create
flutter_native_splash:
  color: "#FDB623"
  image: assets/images/splash_light.png
  color_dark: "#333333"
  image_dark: assets/images/splash_dark.png
  android_12:
    color: "#FDB623"
    image: assets/images/splash_light.png
    color_dark: "#333333"
    image_dark: assets/images/splash_dark.png